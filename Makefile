# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  glad_config = debug
  Engine_config = debug
  SandboxApp_config = debug

else ifeq ($(config),release)
  GLFW_config = release
  glad_config = release
  Engine_config = release
  SandboxApp_config = release

else ifeq ($(config),dist)
  GLFW_config = dist
  glad_config = dist
  Engine_config = dist
  SandboxApp_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := GLFW glad Engine SandboxApp

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: Engine GLFW SandboxApp glad

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C Dependencies/GLFW -f Makefile config=$(GLFW_config)
endif

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C Dependencies/glad -f Makefile config=$(glad_config)
endif

Engine:
ifneq (,$(Engine_config))
	@echo "==== Building Engine ($(Engine_config)) ===="
	@${MAKE} --no-print-directory -C Engine -f Makefile config=$(Engine_config)
endif

SandboxApp: Engine glad GLFW
ifneq (,$(SandboxApp_config))
	@echo "==== Building SandboxApp ($(SandboxApp_config)) ===="
	@${MAKE} --no-print-directory -C SandboxApp -f Makefile config=$(SandboxApp_config)
endif

clean:
	@${MAKE} --no-print-directory -C Dependencies/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C Dependencies/glad -f Makefile clean
	@${MAKE} --no-print-directory -C Engine -f Makefile clean
	@${MAKE} --no-print-directory -C SandboxApp -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   glad"
	@echo "   Engine"
	@echo "   SandboxApp"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"